{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Administration__AlreadyRecordedVehicle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Administration__CallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Administration__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Administration__NotRecordedBoxOffice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Administration__NotRecordedVehicle",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_HGSNumber",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_surname",
          "type": "string"
        },
        {
          "internalType": "enum Administration.vehicleType",
          "name": "_vehicleClass",
          "type": "uint8"
        }
      ],
      "name": "addVehicle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_CAR_FEE_USD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_MINIBUS_FEE_USD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_BUS_FEE_USD",
          "type": "uint256"
        }
      ],
      "name": "createOffice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "crossing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hgsBoxOfficeAddress",
          "type": "address"
        }
      ],
      "name": "deleteOffice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "deleteVehicle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ind",
          "type": "uint256"
        }
      ],
      "name": "getOfficeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVehicle",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "HGSNumber",
              "type": "uint64"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "surname",
              "type": "string"
            },
            {
              "internalType": "enum Administration.vehicleType",
              "name": "vehicleClass",
              "type": "uint8"
            },
            {
              "internalType": "uint64[]",
              "name": "crossingHistories",
              "type": "uint64[]"
            }
          ],
          "internalType": "struct Administration.vehicleStruct",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getVehicle",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "HGSNumber",
              "type": "uint64"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "surname",
              "type": "string"
            },
            {
              "internalType": "enum Administration.vehicleType",
              "name": "vehicleClass",
              "type": "uint8"
            },
            {
              "internalType": "uint64[]",
              "name": "crossingHistories",
              "type": "uint64[]"
            }
          ],
          "internalType": "struct Administration.vehicleStruct",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "hgsBoxOfficesAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfOffices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfVehicle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hgsBoxOfficeAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_CAR_FEE_USD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_MINIBUS_FEE_USD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_BUS_FEE_USD",
          "type": "uint256"
        }
      ],
      "name": "setFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBalanceOfOffices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2dd4662ef11e94bd4f83372b91547f3afe0865599c16d7085de6b51e73c00ea6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "4231824",
    "logsBloom": "0x
    "blockHash": "0x1be33c69950f4900c544d4a0abda1157834a865995c194a84249efafe073fc76",
    "transactionHash": "0x2dd4662ef11e94bd4f83372b91547f3afe0865599c16d7085de6b51e73c00ea6",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "4231824",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "105a752b2aedbb3790c1eea151088cc3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Administration__AlreadyRecordedVehicle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Administration__CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Administration__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Administration__NotRecordedBoxOffice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Administration__NotRecordedVehicle\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_HGSNumber\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_surname\",\"type\":\"string\"},{\"internalType\":\"enum Administration.vehicleType\",\"name\":\"_vehicleClass\",\"type\":\"uint8\"}],\"name\":\"addVehicle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_CAR_FEE_USD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_MINIBUS_FEE_USD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_BUS_FEE_USD\",\"type\":\"uint256\"}],\"name\":\"createOffice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"crossing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hgsBoxOfficeAddress\",\"type\":\"address\"}],\"name\":\"deleteOffice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"deleteVehicle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ind\",\"type\":\"uint256\"}],\"name\":\"getOfficeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVehicle\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"HGSNumber\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"enum Administration.vehicleType\",\"name\":\"vehicleClass\",\"type\":\"uint8\"},{\"internalType\":\"uint64[]\",\"name\":\"crossingHistories\",\"type\":\"uint64[]\"}],\"internalType\":\"struct Administration.vehicleStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getVehicle\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"HGSNumber\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"enum Administration.vehicleType\",\"name\":\"vehicleClass\",\"type\":\"uint8\"},{\"internalType\":\"uint64[]\",\"name\":\"crossingHistories\",\"type\":\"uint64[]\"}],\"internalType\":\"struct Administration.vehicleStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hgsBoxOfficesAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfOffices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfVehicle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hgsBoxOfficeAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_CAR_FEE_USD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_MINIBUS_FEE_USD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_BUS_FEE_USD\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBalanceOfOffices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Administration.sol\":\"Administration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Administration.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.16;\\r\\n\\r\\nimport \\\"./HGSBoxOffice.sol\\\";\\r\\nimport \\\"./DateConverter.sol\\\";\\r\\nimport \\\"./ToString.sol\\\";\\r\\n\\r\\nerror Administration__NotOwner();\\r\\nerror Administration__CallFailed();\\r\\nerror Administration__NotRecordedBoxOffice();\\r\\nerror Administration__AlreadyRecordedVehicle();\\r\\nerror Administration__NotRecordedVehicle();\\r\\n\\r\\ncontract Administration {\\r\\n  using DateConverter for uint64;\\r\\n\\r\\n  enum vehicleType {\\r\\n    car,\\r\\n    minibus,\\r\\n    bus\\r\\n  }\\r\\n\\r\\n  struct vehicleStruct {\\r\\n    uint64 HGSNumber;\\r\\n    string name;\\r\\n    string surname;\\r\\n    vehicleType vehicleClass;\\r\\n    uint64[] crossingHistories;\\r\\n  }\\r\\n\\r\\n  struct VehicleCrossingTime {\\r\\n    DateConverter._DateTime date;\\r\\n    address vehicle;\\r\\n  }\\r\\n\\r\\n  mapping(address => vehicleStruct) private registeredVehicles;\\r\\n  address[] private registeredVehiclesAddress;\\r\\n  mapping(address => bool) private vehicleExists;\\r\\n  uint256 public numberOfVehicle = 0;\\r\\n\\r\\n  address private immutable i_owner;\\r\\n  address private immutable i_priceFeedAddress;\\r\\n  address[] public hgsBoxOfficesAddress;\\r\\n  mapping(address => HGSBoxOffice) hgsBoxOffices;\\r\\n  mapping(address => bool) hgsBoxOfficesExists;\\r\\n  uint256 public numberOfOffices = 0;\\r\\n\\r\\n  mapping(string => VehicleCrossingTime[]) private dailyPass;\\r\\n\\r\\n  constructor(address _priceFeedAddress) {\\r\\n    i_owner = msg.sender;\\r\\n    i_priceFeedAddress = _priceFeedAddress;\\r\\n  }\\r\\n\\r\\n  modifier onlyOwner() {\\r\\n    if (msg.sender != i_owner) revert Administration__NotOwner();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  modifier notRecordedBoxOffice() {\\r\\n    if (!hgsBoxOfficesExists[msg.sender])\\r\\n      revert Administration__NotRecordedBoxOffice();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  modifier notRecordedBoxOffice2(address _hgsBoxOfficeAddress) {\\r\\n    if (!hgsBoxOfficesExists[_hgsBoxOfficeAddress])\\r\\n      revert Administration__NotRecordedBoxOffice();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  modifier alreadyRecordedVehicle(address _owner) {\\r\\n    if (vehicleExists[_owner]) revert Administration__AlreadyRecordedVehicle();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  modifier notRecordedVehicle(address _sender) {\\r\\n    if (!vehicleExists[_sender]) revert Administration__NotRecordedVehicle();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function crossing(address sender)\\r\\n    public\\r\\n    notRecordedBoxOffice\\r\\n    notRecordedVehicle(sender)\\r\\n  {\\r\\n    VehicleCrossingTime memory vehicleCrossingTime;\\r\\n    vehicleCrossingTime.date = uint64(block.timestamp).parseTimestamp();\\r\\n    vehicleCrossingTime.vehicle = sender;\\r\\n    string memory day = string.concat(\\r\\n      Strings.toString(vehicleCrossingTime.date.year),\\r\\n      \\\".\\\",\\r\\n      Strings.toString(vehicleCrossingTime.date.month),\\r\\n      \\\".\\\",\\r\\n      Strings.toString(vehicleCrossingTime.date.day)\\r\\n    );\\r\\n    dailyPass[day].push(vehicleCrossingTime);\\r\\n    registeredVehicles[sender].crossingHistories.push(uint64(block.timestamp));\\r\\n  }\\r\\n\\r\\n  function addVehicle(\\r\\n    address _owner,\\r\\n    uint64 _HGSNumber,\\r\\n    string memory _name,\\r\\n    string memory _surname,\\r\\n    vehicleType _vehicleClass\\r\\n  ) public onlyOwner alreadyRecordedVehicle(_owner) {\\r\\n    registeredVehicles[_owner] = vehicleStruct(\\r\\n      _HGSNumber,\\r\\n      _name,\\r\\n      _surname,\\r\\n      _vehicleClass,\\r\\n      new uint64[](0)\\r\\n    );\\r\\n    registeredVehiclesAddress.push(_owner);\\r\\n    vehicleExists[_owner] = true;\\r\\n    numberOfVehicle++;\\r\\n  }\\r\\n\\r\\n  function deleteVehicle(address _owner) public onlyOwner {\\r\\n    delete registeredVehicles[_owner];\\r\\n    numberOfVehicle--;\\r\\n    vehicleExists[_owner] = false;\\r\\n  }\\r\\n\\r\\n  function createOffice(\\r\\n    uint256 _CAR_FEE_USD,\\r\\n    uint256 _MINIBUS_FEE_USD,\\r\\n    uint256 _BUS_FEE_USD\\r\\n  ) public onlyOwner {\\r\\n    HGSBoxOffice _hgsBoxOffices = new HGSBoxOffice(\\r\\n      this,\\r\\n      i_priceFeedAddress,\\r\\n      _CAR_FEE_USD,\\r\\n      _MINIBUS_FEE_USD,\\r\\n      _BUS_FEE_USD\\r\\n    );\\r\\n    address officeAddress = address(_hgsBoxOffices);\\r\\n    hgsBoxOfficesAddress.push(officeAddress);\\r\\n    hgsBoxOffices[officeAddress] = _hgsBoxOffices;\\r\\n    hgsBoxOfficesExists[officeAddress] = true;\\r\\n    numberOfOffices++;\\r\\n  }\\r\\n\\r\\n  function getOfficeAddress(uint256 ind) public view returns (address) {\\r\\n    return hgsBoxOfficesAddress[ind];\\r\\n  }\\r\\n\\r\\n  function setFees(\\r\\n    address _hgsBoxOfficeAddress,\\r\\n    uint256 _CAR_FEE_USD,\\r\\n    uint256 _MINIBUS_FEE_USD,\\r\\n    uint256 _BUS_FEE_USD\\r\\n  ) public onlyOwner notRecordedBoxOffice2(_hgsBoxOfficeAddress) {\\r\\n    hgsBoxOffices[_hgsBoxOfficeAddress].setFees(\\r\\n      _CAR_FEE_USD,\\r\\n      _MINIBUS_FEE_USD,\\r\\n      _BUS_FEE_USD\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function deleteOffice(address _hgsBoxOfficeAddress)\\r\\n    public\\r\\n    onlyOwner\\r\\n    notRecordedBoxOffice2(_hgsBoxOfficeAddress)\\r\\n  {\\r\\n    hgsBoxOffices[_hgsBoxOfficeAddress].withdraw();\\r\\n    delete hgsBoxOffices[_hgsBoxOfficeAddress];\\r\\n    hgsBoxOfficesExists[_hgsBoxOfficeAddress] = false;\\r\\n    numberOfOffices--;\\r\\n  }\\r\\n\\r\\n  function withdraw() public payable onlyOwner {\\r\\n    address[] memory _hgsBoxOfficesAddress = hgsBoxOfficesAddress;\\r\\n    for (uint256 i = 0; i < _hgsBoxOfficesAddress.length; i++) {\\r\\n      if (hgsBoxOfficesExists[_hgsBoxOfficesAddress[i]])\\r\\n        hgsBoxOffices[_hgsBoxOfficesAddress[i]].withdraw();\\r\\n    }\\r\\n    (bool successCall, ) = payable(msg.sender).call{\\r\\n      value: address(this).balance\\r\\n    }(\\\"\\\");\\r\\n    if (!successCall) revert Administration__CallFailed();\\r\\n  }\\r\\n\\r\\n  function totalBalanceOfOffices()\\r\\n    public\\r\\n    view\\r\\n    onlyOwner\\r\\n    returns (uint256 totalBalance)\\r\\n  {\\r\\n    address[] memory _hgsBoxOfficesAddress = hgsBoxOfficesAddress;\\r\\n    uint256 total = 0;\\r\\n    for (uint256 i = 0; i < _hgsBoxOfficesAddress.length; i++) {\\r\\n      total += _hgsBoxOfficesAddress[i].balance;\\r\\n    }\\r\\n    return total;\\r\\n  }\\r\\n\\r\\n  function getVehicle(address _owner)\\r\\n    public\\r\\n    view\\r\\n    returns (vehicleStruct memory)\\r\\n  {\\r\\n    return registeredVehicles[_owner];\\r\\n  }\\r\\n\\r\\n  function getVehicle() public view returns (vehicleStruct memory) {\\r\\n    return registeredVehicles[msg.sender];\\r\\n  }\\r\\n\\r\\n  receive() external payable {}\\r\\n\\r\\n  fallback() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0x6f78316d626bb19cecf90f8868d8b890b8606350489ee20877a2c4e853af6f2b\",\"license\":\"MIT\"},\"contracts/DateConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.16;\\r\\n\\r\\nlibrary DateConverter {\\r\\n  struct _DateTime {\\r\\n    uint16 year;\\r\\n    uint8 month;\\r\\n    uint8 day;\\r\\n    uint8 hour;\\r\\n    uint8 minute;\\r\\n    uint8 second;\\r\\n    uint8 weekday;\\r\\n  }\\r\\n\\r\\n  uint256 constant DAY_IN_SECONDS = 86400;\\r\\n  uint256 constant YEAR_IN_SECONDS = 31536000;\\r\\n  uint256 constant LEAP_YEAR_IN_SECONDS = 31622400;\\r\\n\\r\\n  uint256 constant HOUR_IN_SECONDS = 3600;\\r\\n  uint256 constant MINUTE_IN_SECONDS = 60;\\r\\n\\r\\n  uint16 constant ORIGIN_YEAR = 1970;\\r\\n\\r\\n  function isLeapYear(uint16 year) public pure returns (bool) {\\r\\n    if (year % 4 != 0) {\\r\\n      return false;\\r\\n    }\\r\\n    if (year % 100 != 0) {\\r\\n      return true;\\r\\n    }\\r\\n    if (year % 400 != 0) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  function leapYearsBefore(uint256 year) public pure returns (uint256) {\\r\\n    year -= 1;\\r\\n    return year / 4 - year / 100 + year / 400;\\r\\n  }\\r\\n\\r\\n  function getDaysInMonth(uint8 month, uint16 year)\\r\\n    public\\r\\n    pure\\r\\n    returns (uint8)\\r\\n  {\\r\\n    if (\\r\\n      month == 1 ||\\r\\n      month == 3 ||\\r\\n      month == 5 ||\\r\\n      month == 7 ||\\r\\n      month == 8 ||\\r\\n      month == 10 ||\\r\\n      month == 12\\r\\n    ) {\\r\\n      return 31;\\r\\n    } else if (month == 4 || month == 6 || month == 9 || month == 11) {\\r\\n      return 30;\\r\\n    } else if (isLeapYear(year)) {\\r\\n      return 29;\\r\\n    } else {\\r\\n      return 28;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function parseTimestamp(uint256 timestamp)\\r\\n    internal\\r\\n    pure\\r\\n    returns (_DateTime memory)\\r\\n  {\\r\\n    uint256 secondsAccountedFor = 0;\\r\\n    uint256 buf;\\r\\n    uint8 i;\\r\\n    _DateTime memory dt;\\r\\n\\r\\n    // Year\\r\\n    dt.year = getYear(timestamp);\\r\\n    buf = leapYearsBefore(dt.year) - leapYearsBefore(ORIGIN_YEAR);\\r\\n\\r\\n    secondsAccountedFor += LEAP_YEAR_IN_SECONDS * buf;\\r\\n    secondsAccountedFor += YEAR_IN_SECONDS * (dt.year - ORIGIN_YEAR - buf);\\r\\n\\r\\n    // Month\\r\\n    uint256 secondsInMonth;\\r\\n    for (i = 1; i <= 12; i++) {\\r\\n      secondsInMonth = DAY_IN_SECONDS * getDaysInMonth(i, dt.year);\\r\\n      if (secondsInMonth + secondsAccountedFor > timestamp) {\\r\\n        dt.month = i;\\r\\n        break;\\r\\n      }\\r\\n      secondsAccountedFor += secondsInMonth;\\r\\n    }\\r\\n\\r\\n    // Day\\r\\n    for (i = 1; i <= getDaysInMonth(dt.month, dt.year); i++) {\\r\\n      if (DAY_IN_SECONDS + secondsAccountedFor > timestamp) {\\r\\n        dt.day = i;\\r\\n        break;\\r\\n      }\\r\\n      secondsAccountedFor += DAY_IN_SECONDS;\\r\\n    }\\r\\n\\r\\n    // Hour\\r\\n    dt.hour = getHour(timestamp);\\r\\n\\r\\n    // Minute\\r\\n    dt.minute = getMinute(timestamp);\\r\\n\\r\\n    // Second\\r\\n    dt.second = getSecond(timestamp);\\r\\n\\r\\n    // Day of week.\\r\\n    dt.weekday = getWeekday(timestamp);\\r\\n\\r\\n    return dt;\\r\\n  }\\r\\n\\r\\n  function getYear(uint256 timestamp) public pure returns (uint16) {\\r\\n    uint256 secondsAccountedFor = 0;\\r\\n    uint16 year;\\r\\n    uint256 numLeapYears;\\r\\n\\r\\n    // Year\\r\\n    year = uint16(ORIGIN_YEAR + timestamp / YEAR_IN_SECONDS);\\r\\n    numLeapYears = leapYearsBefore(year) - leapYearsBefore(ORIGIN_YEAR);\\r\\n\\r\\n    secondsAccountedFor += LEAP_YEAR_IN_SECONDS * numLeapYears;\\r\\n    secondsAccountedFor +=\\r\\n      YEAR_IN_SECONDS *\\r\\n      (year - ORIGIN_YEAR - numLeapYears);\\r\\n\\r\\n    while (secondsAccountedFor > timestamp) {\\r\\n      if (isLeapYear(uint16(year - 1))) {\\r\\n        secondsAccountedFor -= LEAP_YEAR_IN_SECONDS;\\r\\n      } else {\\r\\n        secondsAccountedFor -= YEAR_IN_SECONDS;\\r\\n      }\\r\\n      year -= 1;\\r\\n    }\\r\\n    return year;\\r\\n  }\\r\\n\\r\\n  function getMonth(uint256 timestamp) public pure returns (uint8) {\\r\\n    return parseTimestamp(timestamp).month;\\r\\n  }\\r\\n\\r\\n  function getDay(uint256 timestamp) public pure returns (uint8) {\\r\\n    return parseTimestamp(timestamp).day;\\r\\n  }\\r\\n\\r\\n  function getHour(uint256 timestamp) public pure returns (uint8) {\\r\\n    return uint8((timestamp / 60 / 60) % 24);\\r\\n  }\\r\\n\\r\\n  function getMinute(uint256 timestamp) public pure returns (uint8) {\\r\\n    return uint8((timestamp / 60) % 60);\\r\\n  }\\r\\n\\r\\n  function getSecond(uint256 timestamp) public pure returns (uint8) {\\r\\n    return uint8(timestamp % 60);\\r\\n  }\\r\\n\\r\\n  function getWeekday(uint256 timestamp) public pure returns (uint8) {\\r\\n    return uint8((timestamp / DAY_IN_SECONDS + 4) % 7);\\r\\n  }\\r\\n\\r\\n  function toTimestamp(\\r\\n    uint16 year,\\r\\n    uint8 month,\\r\\n    uint8 day\\r\\n  ) public pure returns (uint256 timestamp) {\\r\\n    return toTimestamp(year, month, day, 0, 0, 0);\\r\\n  }\\r\\n\\r\\n  function toTimestamp(\\r\\n    uint16 year,\\r\\n    uint8 month,\\r\\n    uint8 day,\\r\\n    uint8 hour\\r\\n  ) public pure returns (uint256 timestamp) {\\r\\n    return toTimestamp(year, month, day, hour, 0, 0);\\r\\n  }\\r\\n\\r\\n  function toTimestamp(\\r\\n    uint16 year,\\r\\n    uint8 month,\\r\\n    uint8 day,\\r\\n    uint8 hour,\\r\\n    uint8 minute\\r\\n  ) public pure returns (uint256 timestamp) {\\r\\n    return toTimestamp(year, month, day, hour, minute, 0);\\r\\n  }\\r\\n\\r\\n  function toTimestamp(\\r\\n    uint16 year,\\r\\n    uint8 month,\\r\\n    uint8 day,\\r\\n    uint8 hour,\\r\\n    uint8 minute,\\r\\n    uint8 second\\r\\n  ) public pure returns (uint256 timestamp) {\\r\\n    uint16 i;\\r\\n\\r\\n    // Year\\r\\n    for (i = ORIGIN_YEAR; i < year; i++) {\\r\\n      if (isLeapYear(i)) {\\r\\n        timestamp += LEAP_YEAR_IN_SECONDS;\\r\\n      } else {\\r\\n        timestamp += YEAR_IN_SECONDS;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    // Month\\r\\n    uint8[12] memory monthDayCounts;\\r\\n    monthDayCounts[0] = 31;\\r\\n    if (isLeapYear(year)) {\\r\\n      monthDayCounts[1] = 29;\\r\\n    } else {\\r\\n      monthDayCounts[1] = 28;\\r\\n    }\\r\\n    monthDayCounts[2] = 31;\\r\\n    monthDayCounts[3] = 30;\\r\\n    monthDayCounts[4] = 31;\\r\\n    monthDayCounts[5] = 30;\\r\\n    monthDayCounts[6] = 31;\\r\\n    monthDayCounts[7] = 31;\\r\\n    monthDayCounts[8] = 30;\\r\\n    monthDayCounts[9] = 31;\\r\\n    monthDayCounts[10] = 30;\\r\\n    monthDayCounts[11] = 31;\\r\\n\\r\\n    for (i = 1; i < month; i++) {\\r\\n      timestamp += DAY_IN_SECONDS * monthDayCounts[i - 1];\\r\\n    }\\r\\n\\r\\n    // Day\\r\\n    timestamp += DAY_IN_SECONDS * (day - 1);\\r\\n\\r\\n    // Hour\\r\\n    timestamp += HOUR_IN_SECONDS * (hour);\\r\\n\\r\\n    // Minute\\r\\n    timestamp += MINUTE_IN_SECONDS * (minute);\\r\\n\\r\\n    // Second\\r\\n    timestamp += second;\\r\\n\\r\\n    return timestamp;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xfeef4f6347df971a4c4a90cd693f3a0357201e7bf8587960a8e9aecd7f7bbda2\",\"license\":\"MIT\"},\"contracts/HGSBoxOffice.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.16;\\r\\n\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\nimport \\\"./Administration.sol\\\";\\r\\n\\r\\nerror HGSBoxOffice__LessFee();\\r\\nerror HGSBoxOffice__CallFailed();\\r\\nerror HGSBoxOffice__NotRecorded();\\r\\nerror HGSBoxOffice__NotOwner();\\r\\n\\r\\ncontract HGSBoxOffice {\\r\\n  using PriceConverter for uint256;\\r\\n\\r\\n  address private immutable i_owner;\\r\\n\\r\\n  AggregatorV3Interface private immutable s_priceFeed;\\r\\n  Administration private immutable admin;\\r\\n\\r\\n  uint256 public CAR_FEE_USD;\\r\\n  uint256 public MINIBUS_FEE_USD;\\r\\n  uint256 public BUS_FEE_USD;\\r\\n\\r\\n  constructor(\\r\\n    Administration _admin,\\r\\n    address priceFeedAddress,\\r\\n    uint256 _CAR_FEE_USD,\\r\\n    uint256 _MINIBUS_FEE_USD,\\r\\n    uint256 _BUS_FEE_USD\\r\\n  ) {\\r\\n    i_owner = msg.sender;\\r\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    admin = _admin;\\r\\n\\r\\n    CAR_FEE_USD = _CAR_FEE_USD;\\r\\n    MINIBUS_FEE_USD = _MINIBUS_FEE_USD;\\r\\n    BUS_FEE_USD = _BUS_FEE_USD;\\r\\n  }\\r\\n\\r\\n  modifier notRecorded() {\\r\\n    if (admin.getVehicle(msg.sender).HGSNumber == 0)\\r\\n      revert HGSBoxOffice__NotRecorded();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  modifier lessFee(Administration.vehicleType vehicleClass, uint256 fee) {\\r\\n    if (\\r\\n      (vehicleClass == Administration.vehicleType.car && fee < CAR_FEE_USD) ||\\r\\n      (vehicleClass == Administration.vehicleType.minibus &&\\r\\n        fee < MINIBUS_FEE_USD) ||\\r\\n      (vehicleClass == Administration.vehicleType.bus && fee < BUS_FEE_USD)\\r\\n    ) {\\r\\n      revert HGSBoxOffice__LessFee();\\r\\n    }\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  modifier notOwner() {\\r\\n    if (msg.sender != i_owner) revert HGSBoxOffice__NotOwner();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function setFees(\\r\\n    uint256 _CAR_FEE_USD,\\r\\n    uint256 _MINIBUS_FEE_USD,\\r\\n    uint256 _BUS_FEE_USD\\r\\n  ) public notOwner {\\r\\n    CAR_FEE_USD = _CAR_FEE_USD;\\r\\n    MINIBUS_FEE_USD = _MINIBUS_FEE_USD;\\r\\n    BUS_FEE_USD = _BUS_FEE_USD;\\r\\n  }\\r\\n\\r\\n  function crossing()\\r\\n    public\\r\\n    payable\\r\\n    notRecorded\\r\\n    lessFee(\\r\\n      admin.getVehicle(msg.sender).vehicleClass,\\r\\n      msg.value.getConversionRate(s_priceFeed)\\r\\n    )\\r\\n  {\\r\\n    admin.crossing(msg.sender);\\r\\n  }\\r\\n\\r\\n  function withdraw() public payable notOwner {\\r\\n    (bool successCall, ) = payable(msg.sender).call{\\r\\n      value: address(this).balance\\r\\n    }(\\\"\\\");\\r\\n    if (!successCall) revert HGSBoxOffice__CallFailed();\\r\\n  }\\r\\n\\r\\n  receive() external payable {\\r\\n    crossing();\\r\\n  }\\r\\n\\r\\n  fallback() external payable {\\r\\n    crossing();\\r\\n  }\\r\\n\\r\\n  function getVehicle()\\r\\n    public\\r\\n    view\\r\\n    returns (Administration.vehicleStruct memory)\\r\\n  {\\r\\n    return admin.getVehicle(msg.sender);\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x6e63ab04b639719d0746c7aa513afe0dff52aeeb6b8beb1c6608b9f28ec72f47\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.16;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n  function getPrice(AggregatorV3Interface priceFeed)\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n  {\\r\\n    (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n    return uint256(price);\\r\\n  }\\r\\n\\r\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n  {\\r\\n    return (ethAmount * getPrice(priceFeed)) / 1e26;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x2299fb43b8239ba5a00d32ba2f3ba61ffa5cac70672ff38530f06b3107c452bd\",\"license\":\"MIT\"},\"contracts/ToString.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev String operations.\\r\\n */\\r\\nlibrary Strings {\\r\\n  bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\r\\n  uint8 private constant _ADDRESS_LENGTH = 20;\\r\\n\\r\\n  /**\\r\\n   * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\r\\n   */\\r\\n  function toString(uint256 value) internal pure returns (string memory) {\\r\\n    // Inspired by OraclizeAPI's implementation - MIT licence\\r\\n    // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\r\\n\\r\\n    if (value == 0) {\\r\\n      return \\\"0\\\";\\r\\n    }\\r\\n    uint256 temp = value;\\r\\n    uint256 digits;\\r\\n    while (temp != 0) {\\r\\n      digits++;\\r\\n      temp /= 10;\\r\\n    }\\r\\n    bytes memory buffer = new bytes(digits);\\r\\n    while (value != 0) {\\r\\n      digits -= 1;\\r\\n      buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\r\\n      value /= 10;\\r\\n    }\\r\\n    return string(buffer);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\r\\n   */\\r\\n  function toHexString(uint256 value) internal pure returns (string memory) {\\r\\n    if (value == 0) {\\r\\n      return \\\"0x00\\\";\\r\\n    }\\r\\n    uint256 temp = value;\\r\\n    uint256 length = 0;\\r\\n    while (temp != 0) {\\r\\n      length++;\\r\\n      temp >>= 8;\\r\\n    }\\r\\n    return toHexString(value, length);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\r\\n   */\\r\\n  function toHexString(uint256 value, uint256 length)\\r\\n    internal\\r\\n    pure\\r\\n    returns (string memory)\\r\\n  {\\r\\n    bytes memory buffer = new bytes(2 * length + 2);\\r\\n    buffer[0] = \\\"0\\\";\\r\\n    buffer[1] = \\\"x\\\";\\r\\n    for (uint256 i = 2 * length + 1; i > 1; --i) {\\r\\n      buffer[i] = _HEX_SYMBOLS[value & 0xf];\\r\\n      value >>= 4;\\r\\n    }\\r\\n    require(value == 0, \\\"Strings: hex length insufficient\\\");\\r\\n    return string(buffer);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\r\\n   */\\r\\n  function toHexString(address addr) internal pure returns (string memory) {\\r\\n    return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xe6a23365f34e46ab74db6818441d483c75814e90a96d8605a3c322566cdc239d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c0604052600060035560006007553480156200001b57600080fd5b5060405162004d7e38038062004d7e83398181016040528101906200004191906200011a565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050506200014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e282620000b5565b9050919050565b620000f481620000d5565b81146200010057600080fd5b50565b6000815190506200011481620000e9565b92915050565b600060208284031215620001335762000132620000b0565b5b6000620001438482850162000103565b91505092915050565b60805160a051614be26200019c60003960006104380152600081816103af015281816106390152818161096b01528181610b0e01528181610f25015281816111090152611b4b0152614be26000f3fe608060405260043610620000f75760003560e01c80637669d489116200008b5780638f2c3cb911620000615780638f2c3cb914620002c75780639950abae146200030b578063a93ab101146200033b578063da128f45146200037f57620000ff565b80637669d489146200023d57806379b0a88a146200026b5780638f0e21ef146200029957620000ff565b80635098e1eb11620000cd5780635098e1eb146200017f578063615bc70614620001ad57806361d61f5614620001dd5780637237cd65146200020d57620000ff565b806336790ddf14620001015780633b90f8c9146200012f5780633ccfd60b146200017357620000ff565b36620000ff57005b005b3480156200010e57600080fd5b506200012d6004803603810190620001279190620027de565b620003ad565b005b3480156200013c57600080fd5b506200015b60048036038101906200015591906200283a565b620005f7565b6040516200016a9190620028b1565b60405180910390f35b6200017d62000637565b005b3480156200018c57600080fd5b50620001ab6004803603810190620001a59190620028ff565b62000969565b005b348015620001ba57600080fd5b50620001c562000b0a565b604051620001d4919062002942565b60405180910390f35b348015620001ea57600080fd5b50620001f562000c90565b60405162000204919062002942565b60405180910390f35b3480156200021a57600080fd5b506200022562000c96565b60405162000234919062002be9565b60405180910390f35b3480156200024a57600080fd5b5062000269600480360381019062000263919062002c0d565b62000f23565b005b3480156200027857600080fd5b5062000297600480360381019062000291919062002e29565b62001107565b005b348015620002a657600080fd5b50620002c56004803603810190620002bf9190620028ff565b62001475565b005b348015620002d457600080fd5b50620002f36004803603810190620002ed91906200283a565b62001869565b604051620003029190620028b1565b60405180910390f35b3480156200031857600080fd5b5062000323620018b4565b60405162000332919062002942565b60405180910390f35b3480156200034857600080fd5b50620003676004803603810190620003619190620028ff565b620018ba565b60405162000376919062002be9565b60405180910390f35b3480156200038c57600080fd5b50620003ab6004803603810190620003a59190620028ff565b62001b49565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000433576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000307f0000000000000000000000000000000000000000000000000000000000000000858585604051620004689062002556565b6200047895949392919062002f5a565b604051809103906000f08015801562000495573d6000803e3d6000fd5b50905060008190506004819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060076000815480929190620005eb9062002fe6565b91905055505050505050565b600481815481106200060857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620006bd576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060048054806020026020016040519081016040528092919081815260200182805480156200074357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620006f8575b5050505050905060005b8151811015620008bc576006600083838151811062000771576200077062003033565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615620008a65760056000838381518110620007e157620007e062003033565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200088c57600080fd5b505af1158015620008a1573d6000803e3d6000fd5b505050505b8080620008b39062002fe6565b9150506200074d565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051620008e59062003097565b60006040518083038185875af1925050503d806000811462000924576040519150601f19603f3d011682016040523d82523d6000602084013e62000929565b606091505b505090508062000965576040517f07b8407600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620009ef576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549067ffffffffffffffff021916905560018201600062000a5b919062002564565b60028201600062000a6d919062002564565b6003820160006101000a81549060ff021916905560048201600062000a939190620025aa565b50506003600081548092919062000aaa90620030ae565b91905055506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000b92576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600480548060200260200160405190810160405280929190818152602001828054801562000c1857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000bcd575b505050505090506000805b825181101562000c875782818151811062000c435762000c4262003033565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16318262000c6f9190620030dc565b9150808062000c7e9062002fe6565b91505062000c23565b50809250505090565b60035481565b62000ca0620025d4565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160018201805462000d2d9062003146565b80601f016020809104026020016040519081016040528092919081815260200182805462000d5b9062003146565b801562000dac5780601f1062000d805761010080835404028352916020019162000dac565b820191906000526020600020905b81548152906001019060200180831162000d8e57829003601f168201915b5050505050815260200160028201805462000dc79062003146565b80601f016020809104026020016040519081016040528092919081815260200182805462000df59062003146565b801562000e465780601f1062000e1a5761010080835404028352916020019162000e46565b820191906000526020600020905b81548152906001019060200180831162000e2857829003601f168201915b505050505081526020016003820160009054906101000a900460ff16600281111562000e775762000e7662002a1e565b5b600281111562000e8c5762000e8b62002a1e565b5b81526020016004820180548060200260200160405190810160405280929190818152602001828054801562000f1557602002820191906000526020600020906000905b82829054906101000a900467ffffffffffffffff1667ffffffffffffffff168152602001906008019060208260070104928301926001038202915080841162000ecf5790505b505050505081525050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000fa9576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166200102e576040517ff66b1dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cec10c118585856040518463ffffffff1660e01b8152600401620010cc939291906200317b565b600060405180830381600087803b158015620010e757600080fd5b505af1158015620010fc573d6000803e3d6000fd5b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200118d576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161562001213576040517fc19fa9ac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a001604052808667ffffffffffffffff16815260200185815260200184815260200183600281111562001250576200124f62002a1e565b5b8152602001600067ffffffffffffffff81111562001273576200127262002cba565b5b604051908082528060200260200182016040528015620012a25781602001602082028036833780820191505090505b508152506000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160010190816200132a919062003380565b50604082015181600201908162001342919062003380565b5060608201518160030160006101000a81548160ff0219169083600281111562001371576200137062002a1e565b5b021790555060808201518160040190805190602001906200139492919062002622565b509050506001869080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060036000815480929190620014689062002fe6565b9190505550505050505050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16620014f9576040517ff66b1dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166200157e576040517f01e95d3100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62001588620026e5565b6200159d4267ffffffffffffffff1662001ded565b816000018190525082816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000620015f682600001516000015161ffff1662002044565b6200160c83600001516020015160ff1662002044565b6200162284600001516040015160ff1662002044565b6040516020016200163693929190620034cf565b604051602081830303815290604052905060088160405162001659919062003528565b908152602001604051809103902082908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548160ff021916908360ff16021790555060408201518160000160036101000a81548160ff021916908360ff16021790555060608201518160000160046101000a81548160ff021916908360ff16021790555060808201518160000160056101000a81548160ff021916908360ff16021790555060a08201518160000160066101000a81548160ff021916908360ff16021790555060c08201518160000160076101000a81548160ff021916908360ff160217905550505060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004014290806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050505050565b60006004828154811062001882576200188162003033565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60075481565b620018c4620025d4565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182018054620019519062003146565b80601f01602080910402602001604051908101604052809291908181526020018280546200197f9062003146565b8015620019d05780601f10620019a457610100808354040283529160200191620019d0565b820191906000526020600020905b815481529060010190602001808311620019b257829003601f168201915b50505050508152602001600282018054620019eb9062003146565b80601f016020809104026020016040519081016040528092919081815260200182805462001a199062003146565b801562001a6a5780601f1062001a3e5761010080835404028352916020019162001a6a565b820191906000526020600020905b81548152906001019060200180831162001a4c57829003601f168201915b505050505081526020016003820160009054906101000a900460ff16600281111562001a9b5762001a9a62002a1e565b5b600281111562001ab05762001aaf62002a1e565b5b81526020016004820180548060200260200160405190810160405280929190818152602001828054801562001b3957602002820191906000526020600020906000905b82829054906101000a900467ffffffffffffffff1667ffffffffffffffff168152602001906008019060208260070104928301926001038202915080841162001af35790505b5050505050815250509050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462001bcf576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1662001c54576040517ff66b1dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001cfc57600080fd5b505af115801562001d11573d6000803e3d6000fd5b50505050600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506007600081548092919062001de490620030ae565b91905055505050565b62001df76200271d565b6000808062001e056200271d565b62001e1086620021bd565b816000019061ffff16908161ffff168152505062001e346107b261ffff16620022f8565b62001e47826000015161ffff16620022f8565b62001e53919062003541565b9250826301e2850062001e6791906200357c565b8462001e749190620030dc565b9350826107b2826000015162001e8b9190620035eb565b61ffff1662001e9b919062003541565b6301e1338062001eac91906200357c565b8462001eb99190620030dc565b93506000600192505b600c8360ff161162001f475762001ede83836000015162002358565b60ff166201518062001ef191906200357c565b905086858262001f029190620030dc565b111562001f215782826020019060ff16908160ff168152505062001f47565b808562001f2f9190620030dc565b9450828062001f3e9062003635565b93505062001ec2565b600192505b62001f608260200151836000015162002358565b60ff168360ff161162001fc75786856201518062001f7f9190620030dc565b111562001f9e5782826040019060ff16908160ff168152505062001fc7565b620151808562001faf9190620030dc565b9450828062001fbe9062003635565b93505062001f4c565b62001fd28762002435565b826060019060ff16908160ff168152505062001fee8762002468565b826080019060ff16908160ff16815250506200200a876200248d565b8260a0019060ff16908160ff16815250506200202687620024a5565b8260c0019060ff16908160ff16815250508195505050505050919050565b6060600082036200208d576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050620021b8565b600082905060005b60008214620020c5578080620020ab9062002fe6565b915050600a82620020bd919062003692565b915062002095565b60008167ffffffffffffffff811115620020e457620020e362002cba565b5b6040519080825280601f01601f191660200182016040528015620021175781602001600182028036833780820191505090505b5090505b60008514620021b15760018262002133919062003541565b9150600a85620021449190620036ca565b6030620021529190620030dc565b60f81b8183815181106200216b576200216a62003033565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85620021a9919062003692565b94506200211b565b8093505050505b919050565b600080600090506000806301e1338085620021d9919062003692565b6107b261ffff16620021ec9190620030dc565b9150620021ff6107b261ffff16620022f8565b6200220e8361ffff16620022f8565b6200221a919062003541565b9050806301e285006200222e91906200357c565b836200223b9190620030dc565b9250806107b2836200224e9190620035eb565b61ffff166200225e919062003541565b6301e133806200226f91906200357c565b836200227c9190620030dc565b92505b84831115620022ed57620022a16001836200229b9190620035eb565b620024db565b15620022c1576301e2850083620022b9919062003541565b9250620022d6565b6301e1338083620022d3919062003541565b92505b600182620022e59190620035eb565b91506200227f565b819350505050919050565b600060018262002309919062003541565b9150610190826200231b919062003692565b6064836200232a919062003692565b60048462002339919062003692565b62002345919062003541565b620023519190620030dc565b9050919050565b600060018360ff16148062002370575060038360ff16145b806200237f575060058360ff16145b806200238e575060078360ff16145b806200239d575060088360ff16145b80620023ac5750600a8360ff16145b80620023bb5750600c8360ff16145b15620023cb57601f90506200242f565b60048360ff161480620023e1575060068360ff16145b80620023f0575060098360ff16145b80620023ff5750600b8360ff16145b156200240f57601e90506200242f565b6200241a82620024db565b156200242a57601d90506200242f565b601c90505b92915050565b60006018603c808462002449919062003692565b62002455919062003692565b620024619190620036ca565b9050919050565b6000603c80836200247a919062003692565b620024869190620036ca565b9050919050565b6000603c826200249e9190620036ca565b9050919050565b6000600760046201518084620024bc919062003692565b620024c89190620030dc565b620024d49190620036ca565b9050919050565b600080600483620024ed919062003702565b61ffff161462002501576000905062002551565b600060648362002512919062003702565b61ffff161462002526576001905062002551565b60006101908362002538919062003702565b61ffff16146200254c576000905062002551565b600190505b919050565b611472806200373b83390190565b508054620025729062003146565b6000825580601f10620025865750620025a7565b601f016020900490600052602060002090810190620025a6919062002770565b5b50565b508054600082556003016004900490600052602060002090810190620025d1919062002770565b50565b6040518060a00160405280600067ffffffffffffffff16815260200160608152602001606081526020016000600281111562002615576200261462002a1e565b5b8152602001606081525090565b82805482825590600052602060002090600301600490048101928215620026d25791602002820160005b838211156200269a57835183826101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555092602001926008016020816007010492830192600103026200264c565b8015620026d05782816101000a81549067ffffffffffffffff02191690556008016020816007010492830192600103026200269a565b505b509050620026e1919062002770565b5090565b6040518060400160405280620026fa6200271d565b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060e00160405280600061ffff168152602001600060ff168152602001600060ff168152602001600060ff168152602001600060ff168152602001600060ff168152602001600060ff1681525090565b5b808211156200278b57600081600090555060010162002771565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b620027b881620027a3565b8114620027c457600080fd5b50565b600081359050620027d881620027ad565b92915050565b600080600060608486031215620027fa57620027f962002799565b5b60006200280a86828701620027c7565b93505060206200281d86828701620027c7565b92505060406200283086828701620027c7565b9150509250925092565b60006020828403121562002853576200285262002799565b5b60006200286384828501620027c7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062002899826200286c565b9050919050565b620028ab816200288c565b82525050565b6000602082019050620028c86000830184620028a0565b92915050565b620028d9816200288c565b8114620028e557600080fd5b50565b600081359050620028f981620028ce565b92915050565b60006020828403121562002918576200291762002799565b5b60006200292884828501620028e8565b91505092915050565b6200293c81620027a3565b82525050565b600060208201905062002959600083018462002931565b92915050565b600067ffffffffffffffff82169050919050565b6200297e816200295f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620029c0578082015181840152602081019050620029a3565b60008484015250505050565b6000601f19601f8301169050919050565b6000620029ea8262002984565b620029f681856200298f565b935062002a08818560208601620029a0565b62002a1381620029cc565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811062002a615762002a6062002a1e565b5b50565b600081905062002a748262002a4d565b919050565b600062002a868262002a64565b9050919050565b62002a988162002a79565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600062002ad8838362002973565b60208301905092915050565b6000602082019050919050565b600062002afe8262002a9e565b62002b0a818562002aa9565b935062002b178362002aba565b8060005b8381101562002b4e57815162002b32888262002aca565b975062002b3f8362002ae4565b92505060018101905062002b1b565b5085935050505092915050565b600060a08301600083015162002b75600086018262002973565b506020830151848203602086015262002b8f8282620029dd565b9150506040830151848203604086015262002bab8282620029dd565b915050606083015162002bc2606086018262002a8d565b506080830151848203608086015262002bdc828262002af1565b9150508091505092915050565b6000602082019050818103600083015262002c05818462002b5b565b905092915050565b6000806000806080858703121562002c2a5762002c2962002799565b5b600062002c3a87828801620028e8565b945050602062002c4d87828801620027c7565b935050604062002c6087828801620027c7565b925050606062002c7387828801620027c7565b91505092959194509250565b62002c8a816200295f565b811462002c9657600080fd5b50565b60008135905062002caa8162002c7f565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62002cf482620029cc565b810181811067ffffffffffffffff8211171562002d165762002d1562002cba565b5b80604052505050565b600062002d2b6200278f565b905062002d39828262002ce9565b919050565b600067ffffffffffffffff82111562002d5c5762002d5b62002cba565b5b62002d6782620029cc565b9050602081019050919050565b82818337600083830152505050565b600062002d9a62002d948462002d3e565b62002d1f565b90508281526020810184848401111562002db95762002db862002cb5565b5b62002dc684828562002d74565b509392505050565b600082601f83011262002de65762002de562002cb0565b5b813562002df884826020860162002d83565b91505092915050565b6003811062002e0f57600080fd5b50565b60008135905062002e238162002e01565b92915050565b600080600080600060a0868803121562002e485762002e4762002799565b5b600062002e5888828901620028e8565b955050602062002e6b8882890162002c99565b945050604086013567ffffffffffffffff81111562002e8f5762002e8e6200279e565b5b62002e9d8882890162002dce565b935050606086013567ffffffffffffffff81111562002ec15762002ec06200279e565b5b62002ecf8882890162002dce565b925050608062002ee28882890162002e12565b9150509295509295909350565b6000819050919050565b600062002f1a62002f1462002f0e846200286c565b62002eef565b6200286c565b9050919050565b600062002f2e8262002ef9565b9050919050565b600062002f428262002f21565b9050919050565b62002f548162002f35565b82525050565b600060a08201905062002f71600083018862002f49565b62002f806020830187620028a0565b62002f8f604083018662002931565b62002f9e606083018562002931565b62002fad608083018462002931565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062002ff382620027a3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362003028576200302762002fb7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b60006200307f60008362003062565b91506200308c826200306d565b600082019050919050565b6000620030a48262003070565b9150819050919050565b6000620030bb82620027a3565b915060008203620030d157620030d062002fb7565b5b600182039050919050565b6000620030e982620027a3565b9150620030f683620027a3565b925082820190508082111562003111576200311062002fb7565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200315f57607f821691505b60208210810362003175576200317462003117565b5b50919050565b600060608201905062003192600083018662002931565b620031a1602083018562002931565b620031b0604083018462002931565b949350505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200321c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620031dd565b620032288683620031dd565b95508019841693508086168417925050509392505050565b6000620032616200325b6200325584620027a3565b62002eef565b620027a3565b9050919050565b6000819050919050565b6200327d8362003240565b620032956200328c8262003268565b848454620031ea565b825550505050565b600090565b620032ac6200329d565b620032b981848462003272565b505050565b5b81811015620032e157620032d5600082620032a2565b600181019050620032bf565b5050565b601f8211156200333057620032fa81620031b8565b6200330584620031cd565b8101602085101562003315578190505b6200332d6200332485620031cd565b830182620032be565b50505b505050565b600082821c905092915050565b6000620033556000198460080262003335565b1980831691505092915050565b600062003370838362003342565b9150826002028217905092915050565b6200338b8262002984565b67ffffffffffffffff811115620033a757620033a662002cba565b5b620033b3825462003146565b620033c0828285620032e5565b600060209050601f831160018114620033f85760008415620033e3578287015190505b620033ef858262003362565b8655506200345f565b601f1984166200340886620031b8565b60005b8281101562003432578489015182556001820191506020850194506020810190506200340b565b868310156200345257848901516200344e601f89168262003342565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60006200347f8262002984565b6200348b818562003467565b93506200349d818560208601620029a0565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000815250565b6000620034dd828662003472565b9150620034ea82620034a9565b600182019150620034fc828562003472565b91506200350982620034a9565b6001820191506200351b828462003472565b9150819050949350505050565b600062003536828462003472565b915081905092915050565b60006200354e82620027a3565b91506200355b83620027a3565b925082820390508181111562003576576200357562002fb7565b5b92915050565b60006200358982620027a3565b91506200359683620027a3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620035d257620035d162002fb7565b5b828202905092915050565b600061ffff82169050919050565b6000620035f882620035dd565b91506200360583620035dd565b9250828203905061ffff81111562003622576200362162002fb7565b5b92915050565b600060ff82169050919050565b6000620036428262003628565b915060ff820362003658576200365762002fb7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006200369f82620027a3565b9150620036ac83620027a3565b925082620036bf57620036be62003663565b5b828204905092915050565b6000620036d782620027a3565b9150620036e483620027a3565b925082620036f757620036f662003663565b5b828206905092915050565b60006200370f82620035dd565b91506200371c83620035dd565b9250826200372f576200372e62003663565b5b82820690509291505056fe60e06040523480156200001157600080fd5b5060405162001472380380620014728339818101604052810190620000379190620001f1565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508473ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050826000819055508160018190555080600281905550505050505062000279565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200012582620000f8565b9050919050565b6000620001398262000118565b9050919050565b6200014b816200012c565b81146200015757600080fd5b50565b6000815190506200016b8162000140565b92915050565b60006200017e82620000f8565b9050919050565b620001908162000171565b81146200019c57600080fd5b50565b600081519050620001b08162000185565b92915050565b6000819050919050565b620001cb81620001b6565b8114620001d757600080fd5b50565b600081519050620001eb81620001c0565b92915050565b600080600080600060a0868803121562000210576200020f620000f3565b5b600062000220888289016200015a565b955050602062000233888289016200019f565b94505060406200024688828901620001da565b93505060606200025988828901620001da565b92505060806200026c88828901620001da565b9150509295509295909350565b60805160a05160c0516111ad620002c56000396000818161017a0152818161025e0152818161041701526105e5015260006103040152600081816104a6015261068901526111ad6000f3fe6080604052600436106100745760003560e01c80637237cd651161004e5780637237cd65146100ed578063c9b0599514610118578063cec10c1114610122578063cf3939f71461014b57610083565b80633ccfd60b1461008d5780634b54d3e0146100975780635f1e8a1b146100c257610083565b3661008357610081610176565b005b61008b610176565b005b6100956104a4565b005b3480156100a357600080fd5b506100ac6105cf565b6040516100b99190610845565b60405180910390f35b3480156100ce57600080fd5b506100d76105d5565b6040516100e49190610845565b60405180910390f35b3480156100f957600080fd5b506101026105db565b60405161010f9190610abd565b60405180910390f35b610120610176565b005b34801561012e57600080fd5b5061014960048036038101906101449190610b1f565b610687565b005b34801561015757600080fd5b50610160610726565b60405161016d9190610845565b60405180910390f35b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a93ab101336040518263ffffffff1660e01b81526004016101d19190610bb3565b600060405180830381865afa1580156101ee573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102179190610ef7565b6000015167ffffffffffffffff160361025c576040517fa66b556900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a93ab101336040518263ffffffff1660e01b81526004016102b59190610bb3565b600060405180830381865afa1580156102d2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102fb9190610ef7565b606001516103327f00000000000000000000000000000000000000000000000000000000000000003461072c90919063ffffffff16565b6000600281111561034657610345610913565b5b82600281111561035957610358610913565b5b148015610367575060005481105b806103a357506001600281111561038157610380610913565b5b82600281111561039457610393610913565b5b1480156103a2575060015481105b5b806103de57506002808111156103bc576103bb610913565b5b8260028111156103cf576103ce610913565b5b1480156103dd575060025481105b5b15610415576040517f8039304e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638f0e21ef336040518263ffffffff1660e01b815260040161046e9190610bb3565b600060405180830381600087803b15801561048857600080fd5b505af115801561049c573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610529576040517f1859b4ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161054f90610f71565b60006040518083038185875af1925050503d806000811461058c576040519150601f19603f3d011682016040523d82523d6000602084013e610591565b606091505b50509050806105cc576040517fb863ed9c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60025481565b60005481565b6105e36107e1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a93ab101336040518263ffffffff1660e01b815260040161063c9190610bb3565b600060405180830381865afa158015610659573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106829190610ef7565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070c576040517f1859b4ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826000819055508160018190555080600281905550505050565b60015481565b60006a52b7d2dcc80cd2e400000061074383610760565b8461074e9190610fb5565b610758919061103e565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d291906110fc565b50505091505080915050919050565b6040518060a00160405280600067ffffffffffffffff16815260200160608152602001606081526020016000600281111561081f5761081e610913565b5b8152602001606081525090565b6000819050919050565b61083f8161082c565b82525050565b600060208201905061085a6000830184610836565b92915050565b600067ffffffffffffffff82169050919050565b61087d81610860565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108bd5780820151818401526020810190506108a2565b60008484015250505050565b6000601f19601f8301169050919050565b60006108e582610883565b6108ef818561088e565b93506108ff81856020860161089f565b610908816108c9565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061095357610952610913565b5b50565b600081905061096482610942565b919050565b600061097482610956565b9050919050565b61098481610969565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006109c28383610874565b60208301905092915050565b6000602082019050919050565b60006109e68261098a565b6109f08185610995565b93506109fb836109a6565b8060005b83811015610a2c578151610a1388826109b6565b9750610a1e836109ce565b9250506001810190506109ff565b5085935050505092915050565b600060a083016000830151610a516000860182610874565b5060208301518482036020860152610a6982826108da565b91505060408301518482036040860152610a8382826108da565b9150506060830151610a98606086018261097b565b5060808301518482036080860152610ab082826109db565b9150508091505092915050565b60006020820190508181036000830152610ad78184610a39565b905092915050565b6000604051905090565b600080fd5b600080fd5b610afc8161082c565b8114610b0757600080fd5b50565b600081359050610b1981610af3565b92915050565b600080600060608486031215610b3857610b37610ae9565b5b6000610b4686828701610b0a565b9350506020610b5786828701610b0a565b9250506040610b6886828701610b0a565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b9d82610b72565b9050919050565b610bad81610b92565b82525050565b6000602082019050610bc86000830184610ba4565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c0b826108c9565b810181811067ffffffffffffffff82111715610c2a57610c29610bd3565b5b80604052505050565b6000610c3d610adf565b9050610c498282610c02565b919050565b600080fd5b610c5c81610860565b8114610c6757600080fd5b50565b600081519050610c7981610c53565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff821115610ca457610ca3610bd3565b5b610cad826108c9565b9050602081019050919050565b6000610ccd610cc884610c89565b610c33565b905082815260208101848484011115610ce957610ce8610c84565b5b610cf484828561089f565b509392505050565b600082601f830112610d1157610d10610c7f565b5b8151610d21848260208601610cba565b91505092915050565b60038110610d3757600080fd5b50565b600081519050610d4981610d2a565b92915050565b600067ffffffffffffffff821115610d6a57610d69610bd3565b5b602082029050602081019050919050565b600080fd5b6000610d93610d8e84610d4f565b610c33565b90508083825260208201905060208402830185811115610db657610db5610d7b565b5b835b81811015610ddf5780610dcb8882610c6a565b845260208401935050602081019050610db8565b5050509392505050565b600082601f830112610dfe57610dfd610c7f565b5b8151610e0e848260208601610d80565b91505092915050565b600060a08284031215610e2d57610e2c610bce565b5b610e3760a0610c33565b90506000610e4784828501610c6a565b600083015250602082015167ffffffffffffffff811115610e6b57610e6a610c4e565b5b610e7784828501610cfc565b602083015250604082015167ffffffffffffffff811115610e9b57610e9a610c4e565b5b610ea784828501610cfc565b6040830152506060610ebb84828501610d3a565b606083015250608082015167ffffffffffffffff811115610edf57610ede610c4e565b5b610eeb84828501610de9565b60808301525092915050565b600060208284031215610f0d57610f0c610ae9565b5b600082015167ffffffffffffffff811115610f2b57610f2a610aee565b5b610f3784828501610e17565b91505092915050565b600081905092915050565b50565b6000610f5b600083610f40565b9150610f6682610f4b565b600082019050919050565b6000610f7c82610f4e565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fc08261082c565b9150610fcb8361082c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561100457611003610f86565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110498261082c565b91506110548361082c565b9250826110645761106361100f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61108e8161106f565b811461109957600080fd5b50565b6000815190506110ab81611085565b92915050565b6000819050919050565b6110c4816110b1565b81146110cf57600080fd5b50565b6000815190506110e1816110bb565b92915050565b6000815190506110f681610af3565b92915050565b600080600080600060a0868803121561111857611117610ae9565b5b60006111268882890161109c565b9550506020611137888289016110d2565b9450506040611148888289016110e7565b9350506060611159888289016110e7565b925050608061116a8882890161109c565b915050929550929590935056fea264697066735822122069b36c00b2eed8d189299c41b7a33060560f5a6eca553bcff2e25206ccd7fd0764736f6c63430008100033a2646970667358221220ae78322a0477f6dd0f987981a127b1db7defa29a609e1be63a352cea41d3917f64736f6c63430008100033",
  "deployedBytecode": "0x608060405260043610620000f75760003560e01c80637669d489116200008b5780638f2c3cb911620000615780638f2c3cb914620002c75780639950abae146200030b578063a93ab101146200033b578063da128f45146200037f57620000ff565b80637669d489146200023d57806379b0a88a146200026b5780638f0e21ef146200029957620000ff565b80635098e1eb11620000cd5780635098e1eb146200017f578063615bc70614620001ad57806361d61f5614620001dd5780637237cd65146200020d57620000ff565b806336790ddf14620001015780633b90f8c9146200012f5780633ccfd60b146200017357620000ff565b36620000ff57005b005b3480156200010e57600080fd5b506200012d6004803603810190620001279190620027de565b620003ad565b005b3480156200013c57600080fd5b506200015b60048036038101906200015591906200283a565b620005f7565b6040516200016a9190620028b1565b60405180910390f35b6200017d62000637565b005b3480156200018c57600080fd5b50620001ab6004803603810190620001a59190620028ff565b62000969565b005b348015620001ba57600080fd5b50620001c562000b0a565b604051620001d4919062002942565b60405180910390f35b348015620001ea57600080fd5b50620001f562000c90565b60405162000204919062002942565b60405180910390f35b3480156200021a57600080fd5b506200022562000c96565b60405162000234919062002be9565b60405180910390f35b3480156200024a57600080fd5b5062000269600480360381019062000263919062002c0d565b62000f23565b005b3480156200027857600080fd5b5062000297600480360381019062000291919062002e29565b62001107565b005b348015620002a657600080fd5b50620002c56004803603810190620002bf9190620028ff565b62001475565b005b348015620002d457600080fd5b50620002f36004803603810190620002ed91906200283a565b62001869565b604051620003029190620028b1565b60405180910390f35b3480156200031857600080fd5b5062000323620018b4565b60405162000332919062002942565b60405180910390f35b3480156200034857600080fd5b50620003676004803603810190620003619190620028ff565b620018ba565b60405162000376919062002be9565b60405180910390f35b3480156200038c57600080fd5b50620003ab6004803603810190620003a59190620028ff565b62001b49565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000433576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000307f0000000000000000000000000000000000000000000000000000000000000000858585604051620004689062002556565b6200047895949392919062002f5a565b604051809103906000f08015801562000495573d6000803e3d6000fd5b50905060008190506004819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060076000815480929190620005eb9062002fe6565b91905055505050505050565b600481815481106200060857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620006bd576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060048054806020026020016040519081016040528092919081815260200182805480156200074357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620006f8575b5050505050905060005b8151811015620008bc576006600083838151811062000771576200077062003033565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615620008a65760056000838381518110620007e157620007e062003033565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200088c57600080fd5b505af1158015620008a1573d6000803e3d6000fd5b505050505b8080620008b39062002fe6565b9150506200074d565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051620008e59062003097565b60006040518083038185875af1925050503d806000811462000924576040519150601f19603f3d011682016040523d82523d6000602084013e62000929565b606091505b505090508062000965576040517f07b8407600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620009ef576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549067ffffffffffffffff021916905560018201600062000a5b919062002564565b60028201600062000a6d919062002564565b6003820160006101000a81549060ff021916905560048201600062000a939190620025aa565b50506003600081548092919062000aaa90620030ae565b91905055506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000b92576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600480548060200260200160405190810160405280929190818152602001828054801562000c1857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000bcd575b505050505090506000805b825181101562000c875782818151811062000c435762000c4262003033565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16318262000c6f9190620030dc565b9150808062000c7e9062002fe6565b91505062000c23565b50809250505090565b60035481565b62000ca0620025d4565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160018201805462000d2d9062003146565b80601f016020809104026020016040519081016040528092919081815260200182805462000d5b9062003146565b801562000dac5780601f1062000d805761010080835404028352916020019162000dac565b820191906000526020600020905b81548152906001019060200180831162000d8e57829003601f168201915b5050505050815260200160028201805462000dc79062003146565b80601f016020809104026020016040519081016040528092919081815260200182805462000df59062003146565b801562000e465780601f1062000e1a5761010080835404028352916020019162000e46565b820191906000526020600020905b81548152906001019060200180831162000e2857829003601f168201915b505050505081526020016003820160009054906101000a900460ff16600281111562000e775762000e7662002a1e565b5b600281111562000e8c5762000e8b62002a1e565b5b81526020016004820180548060200260200160405190810160405280929190818152602001828054801562000f1557602002820191906000526020600020906000905b82829054906101000a900467ffffffffffffffff1667ffffffffffffffff168152602001906008019060208260070104928301926001038202915080841162000ecf5790505b505050505081525050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000fa9576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166200102e576040517ff66b1dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cec10c118585856040518463ffffffff1660e01b8152600401620010cc939291906200317b565b600060405180830381600087803b158015620010e757600080fd5b505af1158015620010fc573d6000803e3d6000fd5b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200118d576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161562001213576040517fc19fa9ac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a001604052808667ffffffffffffffff16815260200185815260200184815260200183600281111562001250576200124f62002a1e565b5b8152602001600067ffffffffffffffff81111562001273576200127262002cba565b5b604051908082528060200260200182016040528015620012a25781602001602082028036833780820191505090505b508152506000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160010190816200132a919062003380565b50604082015181600201908162001342919062003380565b5060608201518160030160006101000a81548160ff0219169083600281111562001371576200137062002a1e565b5b021790555060808201518160040190805190602001906200139492919062002622565b509050506001869080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060036000815480929190620014689062002fe6565b9190505550505050505050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16620014f9576040517ff66b1dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166200157e576040517f01e95d3100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62001588620026e5565b6200159d4267ffffffffffffffff1662001ded565b816000018190525082816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000620015f682600001516000015161ffff1662002044565b6200160c83600001516020015160ff1662002044565b6200162284600001516040015160ff1662002044565b6040516020016200163693929190620034cf565b604051602081830303815290604052905060088160405162001659919062003528565b908152602001604051809103902082908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548160ff021916908360ff16021790555060408201518160000160036101000a81548160ff021916908360ff16021790555060608201518160000160046101000a81548160ff021916908360ff16021790555060808201518160000160056101000a81548160ff021916908360ff16021790555060a08201518160000160066101000a81548160ff021916908360ff16021790555060c08201518160000160076101000a81548160ff021916908360ff160217905550505060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004014290806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050505050565b60006004828154811062001882576200188162003033565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60075481565b620018c4620025d4565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182018054620019519062003146565b80601f01602080910402602001604051908101604052809291908181526020018280546200197f9062003146565b8015620019d05780601f10620019a457610100808354040283529160200191620019d0565b820191906000526020600020905b815481529060010190602001808311620019b257829003601f168201915b50505050508152602001600282018054620019eb9062003146565b80601f016020809104026020016040519081016040528092919081815260200182805462001a199062003146565b801562001a6a5780601f1062001a3e5761010080835404028352916020019162001a6a565b820191906000526020600020905b81548152906001019060200180831162001a4c57829003601f168201915b505050505081526020016003820160009054906101000a900460ff16600281111562001a9b5762001a9a62002a1e565b5b600281111562001ab05762001aaf62002a1e565b5b81526020016004820180548060200260200160405190810160405280929190818152602001828054801562001b3957602002820191906000526020600020906000905b82829054906101000a900467ffffffffffffffff1667ffffffffffffffff168152602001906008019060208260070104928301926001038202915080841162001af35790505b5050505050815250509050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462001bcf576040517fff66540000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1662001c54576040517ff66b1dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001cfc57600080fd5b505af115801562001d11573d6000803e3d6000fd5b50505050600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506007600081548092919062001de490620030ae565b91905055505050565b62001df76200271d565b6000808062001e056200271d565b62001e1086620021bd565b816000019061ffff16908161ffff168152505062001e346107b261ffff16620022f8565b62001e47826000015161ffff16620022f8565b62001e53919062003541565b9250826301e2850062001e6791906200357c565b8462001e749190620030dc565b9350826107b2826000015162001e8b9190620035eb565b61ffff1662001e9b919062003541565b6301e1338062001eac91906200357c565b8462001eb99190620030dc565b93506000600192505b600c8360ff161162001f475762001ede83836000015162002358565b60ff166201518062001ef191906200357c565b905086858262001f029190620030dc565b111562001f215782826020019060ff16908160ff168152505062001f47565b808562001f2f9190620030dc565b9450828062001f3e9062003635565b93505062001ec2565b600192505b62001f608260200151836000015162002358565b60ff168360ff161162001fc75786856201518062001f7f9190620030dc565b111562001f9e5782826040019060ff16908160ff168152505062001fc7565b620151808562001faf9190620030dc565b9450828062001fbe9062003635565b93505062001f4c565b62001fd28762002435565b826060019060ff16908160ff168152505062001fee8762002468565b826080019060ff16908160ff16815250506200200a876200248d565b8260a0019060ff16908160ff16815250506200202687620024a5565b8260c0019060ff16908160ff16815250508195505050505050919050565b6060600082036200208d576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050620021b8565b600082905060005b60008214620020c5578080620020ab9062002fe6565b915050600a82620020bd919062003692565b915062002095565b60008167ffffffffffffffff811115620020e457620020e362002cba565b5b6040519080825280601f01601f191660200182016040528015620021175781602001600182028036833780820191505090505b5090505b60008514620021b15760018262002133919062003541565b9150600a85620021449190620036ca565b6030620021529190620030dc565b60f81b8183815181106200216b576200216a62003033565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85620021a9919062003692565b94506200211b565b8093505050505b919050565b600080600090506000806301e1338085620021d9919062003692565b6107b261ffff16620021ec9190620030dc565b9150620021ff6107b261ffff16620022f8565b6200220e8361ffff16620022f8565b6200221a919062003541565b9050806301e285006200222e91906200357c565b836200223b9190620030dc565b9250806107b2836200224e9190620035eb565b61ffff166200225e919062003541565b6301e133806200226f91906200357c565b836200227c9190620030dc565b92505b84831115620022ed57620022a16001836200229b9190620035eb565b620024db565b15620022c1576301e2850083620022b9919062003541565b9250620022d6565b6301e1338083620022d3919062003541565b92505b600182620022e59190620035eb565b91506200227f565b819350505050919050565b600060018262002309919062003541565b9150610190826200231b919062003692565b6064836200232a919062003692565b60048462002339919062003692565b62002345919062003541565b620023519190620030dc565b9050919050565b600060018360ff16148062002370575060038360ff16145b806200237f575060058360ff16145b806200238e575060078360ff16145b806200239d575060088360ff16145b80620023ac5750600a8360ff16145b80620023bb5750600c8360ff16145b15620023cb57601f90506200242f565b60048360ff161480620023e1575060068360ff16145b80620023f0575060098360ff16145b80620023ff5750600b8360ff16145b156200240f57601e90506200242f565b6200241a82620024db565b156200242a57601d90506200242f565b601c90505b92915050565b60006018603c808462002449919062003692565b62002455919062003692565b620024619190620036ca565b9050919050565b6000603c80836200247a919062003692565b620024869190620036ca565b9050919050565b6000603c826200249e9190620036ca565b9050919050565b6000600760046201518084620024bc919062003692565b620024c89190620030dc565b620024d49190620036ca565b9050919050565b600080600483620024ed919062003702565b61ffff161462002501576000905062002551565b600060648362002512919062003702565b61ffff161462002526576001905062002551565b60006101908362002538919062003702565b61ffff16146200254c576000905062002551565b600190505b919050565b611472806200373b83390190565b508054620025729062003146565b6000825580601f10620025865750620025a7565b601f016020900490600052602060002090810190620025a6919062002770565b5b50565b508054600082556003016004900490600052602060002090810190620025d1919062002770565b50565b6040518060a00160405280600067ffffffffffffffff16815260200160608152602001606081526020016000600281111562002615576200261462002a1e565b5b8152602001606081525090565b82805482825590600052602060002090600301600490048101928215620026d25791602002820160005b838211156200269a57835183826101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555092602001926008016020816007010492830192600103026200264c565b8015620026d05782816101000a81549067ffffffffffffffff02191690556008016020816007010492830192600103026200269a565b505b509050620026e1919062002770565b5090565b6040518060400160405280620026fa6200271d565b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060e00160405280600061ffff168152602001600060ff168152602001600060ff168152602001600060ff168152602001600060ff168152602001600060ff168152602001600060ff1681525090565b5b808211156200278b57600081600090555060010162002771565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b620027b881620027a3565b8114620027c457600080fd5b50565b600081359050620027d881620027ad565b92915050565b600080600060608486031215620027fa57620027f962002799565b5b60006200280a86828701620027c7565b93505060206200281d86828701620027c7565b92505060406200283086828701620027c7565b9150509250925092565b60006020828403121562002853576200285262002799565b5b60006200286384828501620027c7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062002899826200286c565b9050919050565b620028ab816200288c565b82525050565b6000602082019050620028c86000830184620028a0565b92915050565b620028d9816200288c565b8114620028e557600080fd5b50565b600081359050620028f981620028ce565b92915050565b60006020828403121562002918576200291762002799565b5b60006200292884828501620028e8565b91505092915050565b6200293c81620027a3565b82525050565b600060208201905062002959600083018462002931565b92915050565b600067ffffffffffffffff82169050919050565b6200297e816200295f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620029c0578082015181840152602081019050620029a3565b60008484015250505050565b6000601f19601f8301169050919050565b6000620029ea8262002984565b620029f681856200298f565b935062002a08818560208601620029a0565b62002a1381620029cc565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811062002a615762002a6062002a1e565b5b50565b600081905062002a748262002a4d565b919050565b600062002a868262002a64565b9050919050565b62002a988162002a79565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600062002ad8838362002973565b60208301905092915050565b6000602082019050919050565b600062002afe8262002a9e565b62002b0a818562002aa9565b935062002b178362002aba565b8060005b8381101562002b4e57815162002b32888262002aca565b975062002b3f8362002ae4565b92505060018101905062002b1b565b5085935050505092915050565b600060a08301600083015162002b75600086018262002973565b506020830151848203602086015262002b8f8282620029dd565b9150506040830151848203604086015262002bab8282620029dd565b915050606083015162002bc2606086018262002a8d565b506080830151848203608086015262002bdc828262002af1565b9150508091505092915050565b6000602082019050818103600083015262002c05818462002b5b565b905092915050565b6000806000806080858703121562002c2a5762002c2962002799565b5b600062002c3a87828801620028e8565b945050602062002c4d87828801620027c7565b935050604062002c6087828801620027c7565b925050606062002c7387828801620027c7565b91505092959194509250565b62002c8a816200295f565b811462002c9657600080fd5b50565b60008135905062002caa8162002c7f565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62002cf482620029cc565b810181811067ffffffffffffffff8211171562002d165762002d1562002cba565b5b80604052505050565b600062002d2b6200278f565b905062002d39828262002ce9565b919050565b600067ffffffffffffffff82111562002d5c5762002d5b62002cba565b5b62002d6782620029cc565b9050602081019050919050565b82818337600083830152505050565b600062002d9a62002d948462002d3e565b62002d1f565b90508281526020810184848401111562002db95762002db862002cb5565b5b62002dc684828562002d74565b509392505050565b600082601f83011262002de65762002de562002cb0565b5b813562002df884826020860162002d83565b91505092915050565b6003811062002e0f57600080fd5b50565b60008135905062002e238162002e01565b92915050565b600080600080600060a0868803121562002e485762002e4762002799565b5b600062002e5888828901620028e8565b955050602062002e6b8882890162002c99565b945050604086013567ffffffffffffffff81111562002e8f5762002e8e6200279e565b5b62002e9d8882890162002dce565b935050606086013567ffffffffffffffff81111562002ec15762002ec06200279e565b5b62002ecf8882890162002dce565b925050608062002ee28882890162002e12565b9150509295509295909350565b6000819050919050565b600062002f1a62002f1462002f0e846200286c565b62002eef565b6200286c565b9050919050565b600062002f2e8262002ef9565b9050919050565b600062002f428262002f21565b9050919050565b62002f548162002f35565b82525050565b600060a08201905062002f71600083018862002f49565b62002f806020830187620028a0565b62002f8f604083018662002931565b62002f9e606083018562002931565b62002fad608083018462002931565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062002ff382620027a3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362003028576200302762002fb7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b60006200307f60008362003062565b91506200308c826200306d565b600082019050919050565b6000620030a48262003070565b9150819050919050565b6000620030bb82620027a3565b915060008203620030d157620030d062002fb7565b5b600182039050919050565b6000620030e982620027a3565b9150620030f683620027a3565b925082820190508082111562003111576200311062002fb7565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200315f57607f821691505b60208210810362003175576200317462003117565b5b50919050565b600060608201905062003192600083018662002931565b620031a1602083018562002931565b620031b0604083018462002931565b949350505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200321c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620031dd565b620032288683620031dd565b95508019841693508086168417925050509392505050565b6000620032616200325b6200325584620027a3565b62002eef565b620027a3565b9050919050565b6000819050919050565b6200327d8362003240565b620032956200328c8262003268565b848454620031ea565b825550505050565b600090565b620032ac6200329d565b620032b981848462003272565b505050565b5b81811015620032e157620032d5600082620032a2565b600181019050620032bf565b5050565b601f8211156200333057620032fa81620031b8565b6200330584620031cd565b8101602085101562003315578190505b6200332d6200332485620031cd565b830182620032be565b50505b505050565b600082821c905092915050565b6000620033556000198460080262003335565b1980831691505092915050565b600062003370838362003342565b9150826002028217905092915050565b6200338b8262002984565b67ffffffffffffffff811115620033a757620033a662002cba565b5b620033b3825462003146565b620033c0828285620032e5565b600060209050601f831160018114620033f85760008415620033e3578287015190505b620033ef858262003362565b8655506200345f565b601f1984166200340886620031b8565b60005b8281101562003432578489015182556001820191506020850194506020810190506200340b565b868310156200345257848901516200344e601f89168262003342565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60006200347f8262002984565b6200348b818562003467565b93506200349d818560208601620029a0565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000815250565b6000620034dd828662003472565b9150620034ea82620034a9565b600182019150620034fc828562003472565b91506200350982620034a9565b6001820191506200351b828462003472565b9150819050949350505050565b600062003536828462003472565b915081905092915050565b60006200354e82620027a3565b91506200355b83620027a3565b925082820390508181111562003576576200357562002fb7565b5b92915050565b60006200358982620027a3565b91506200359683620027a3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620035d257620035d162002fb7565b5b828202905092915050565b600061ffff82169050919050565b6000620035f882620035dd565b91506200360583620035dd565b9250828203905061ffff81111562003622576200362162002fb7565b5b92915050565b600060ff82169050919050565b6000620036428262003628565b915060ff820362003658576200365762002fb7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006200369f82620027a3565b9150620036ac83620027a3565b925082620036bf57620036be62003663565b5b828204905092915050565b6000620036d782620027a3565b9150620036e483620027a3565b925082620036f757620036f662003663565b5b828206905092915050565b60006200370f82620035dd565b91506200371c83620035dd565b9250826200372f576200372e62003663565b5b82820690509291505056fe60e06040523480156200001157600080fd5b5060405162001472380380620014728339818101604052810190620000379190620001f1565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508473ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050826000819055508160018190555080600281905550505050505062000279565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200012582620000f8565b9050919050565b6000620001398262000118565b9050919050565b6200014b816200012c565b81146200015757600080fd5b50565b6000815190506200016b8162000140565b92915050565b60006200017e82620000f8565b9050919050565b620001908162000171565b81146200019c57600080fd5b50565b600081519050620001b08162000185565b92915050565b6000819050919050565b620001cb81620001b6565b8114620001d757600080fd5b50565b600081519050620001eb81620001c0565b92915050565b600080600080600060a0868803121562000210576200020f620000f3565b5b600062000220888289016200015a565b955050602062000233888289016200019f565b94505060406200024688828901620001da565b93505060606200025988828901620001da565b92505060806200026c88828901620001da565b9150509295509295909350565b60805160a05160c0516111ad620002c56000396000818161017a0152818161025e0152818161041701526105e5015260006103040152600081816104a6015261068901526111ad6000f3fe6080604052600436106100745760003560e01c80637237cd651161004e5780637237cd65146100ed578063c9b0599514610118578063cec10c1114610122578063cf3939f71461014b57610083565b80633ccfd60b1461008d5780634b54d3e0146100975780635f1e8a1b146100c257610083565b3661008357610081610176565b005b61008b610176565b005b6100956104a4565b005b3480156100a357600080fd5b506100ac6105cf565b6040516100b99190610845565b60405180910390f35b3480156100ce57600080fd5b506100d76105d5565b6040516100e49190610845565b60405180910390f35b3480156100f957600080fd5b506101026105db565b60405161010f9190610abd565b60405180910390f35b610120610176565b005b34801561012e57600080fd5b5061014960048036038101906101449190610b1f565b610687565b005b34801561015757600080fd5b50610160610726565b60405161016d9190610845565b60405180910390f35b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a93ab101336040518263ffffffff1660e01b81526004016101d19190610bb3565b600060405180830381865afa1580156101ee573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102179190610ef7565b6000015167ffffffffffffffff160361025c576040517fa66b556900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a93ab101336040518263ffffffff1660e01b81526004016102b59190610bb3565b600060405180830381865afa1580156102d2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102fb9190610ef7565b606001516103327f00000000000000000000000000000000000000000000000000000000000000003461072c90919063ffffffff16565b6000600281111561034657610345610913565b5b82600281111561035957610358610913565b5b148015610367575060005481105b806103a357506001600281111561038157610380610913565b5b82600281111561039457610393610913565b5b1480156103a2575060015481105b5b806103de57506002808111156103bc576103bb610913565b5b8260028111156103cf576103ce610913565b5b1480156103dd575060025481105b5b15610415576040517f8039304e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638f0e21ef336040518263ffffffff1660e01b815260040161046e9190610bb3565b600060405180830381600087803b15801561048857600080fd5b505af115801561049c573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610529576040517f1859b4ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161054f90610f71565b60006040518083038185875af1925050503d806000811461058c576040519150601f19603f3d011682016040523d82523d6000602084013e610591565b606091505b50509050806105cc576040517fb863ed9c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60025481565b60005481565b6105e36107e1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a93ab101336040518263ffffffff1660e01b815260040161063c9190610bb3565b600060405180830381865afa158015610659573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106829190610ef7565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070c576040517f1859b4ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826000819055508160018190555080600281905550505050565b60015481565b60006a52b7d2dcc80cd2e400000061074383610760565b8461074e9190610fb5565b610758919061103e565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d291906110fc565b50505091505080915050919050565b6040518060a00160405280600067ffffffffffffffff16815260200160608152602001606081526020016000600281111561081f5761081e610913565b5b8152602001606081525090565b6000819050919050565b61083f8161082c565b82525050565b600060208201905061085a6000830184610836565b92915050565b600067ffffffffffffffff82169050919050565b61087d81610860565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108bd5780820151818401526020810190506108a2565b60008484015250505050565b6000601f19601f8301169050919050565b60006108e582610883565b6108ef818561088e565b93506108ff81856020860161089f565b610908816108c9565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061095357610952610913565b5b50565b600081905061096482610942565b919050565b600061097482610956565b9050919050565b61098481610969565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006109c28383610874565b60208301905092915050565b6000602082019050919050565b60006109e68261098a565b6109f08185610995565b93506109fb836109a6565b8060005b83811015610a2c578151610a1388826109b6565b9750610a1e836109ce565b9250506001810190506109ff565b5085935050505092915050565b600060a083016000830151610a516000860182610874565b5060208301518482036020860152610a6982826108da565b91505060408301518482036040860152610a8382826108da565b9150506060830151610a98606086018261097b565b5060808301518482036080860152610ab082826109db565b9150508091505092915050565b60006020820190508181036000830152610ad78184610a39565b905092915050565b6000604051905090565b600080fd5b600080fd5b610afc8161082c565b8114610b0757600080fd5b50565b600081359050610b1981610af3565b92915050565b600080600060608486031215610b3857610b37610ae9565b5b6000610b4686828701610b0a565b9350506020610b5786828701610b0a565b9250506040610b6886828701610b0a565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b9d82610b72565b9050919050565b610bad81610b92565b82525050565b6000602082019050610bc86000830184610ba4565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c0b826108c9565b810181811067ffffffffffffffff82111715610c2a57610c29610bd3565b5b80604052505050565b6000610c3d610adf565b9050610c498282610c02565b919050565b600080fd5b610c5c81610860565b8114610c6757600080fd5b50565b600081519050610c7981610c53565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff821115610ca457610ca3610bd3565b5b610cad826108c9565b9050602081019050919050565b6000610ccd610cc884610c89565b610c33565b905082815260208101848484011115610ce957610ce8610c84565b5b610cf484828561089f565b509392505050565b600082601f830112610d1157610d10610c7f565b5b8151610d21848260208601610cba565b91505092915050565b60038110610d3757600080fd5b50565b600081519050610d4981610d2a565b92915050565b600067ffffffffffffffff821115610d6a57610d69610bd3565b5b602082029050602081019050919050565b600080fd5b6000610d93610d8e84610d4f565b610c33565b90508083825260208201905060208402830185811115610db657610db5610d7b565b5b835b81811015610ddf5780610dcb8882610c6a565b845260208401935050602081019050610db8565b5050509392505050565b600082601f830112610dfe57610dfd610c7f565b5b8151610e0e848260208601610d80565b91505092915050565b600060a08284031215610e2d57610e2c610bce565b5b610e3760a0610c33565b90506000610e4784828501610c6a565b600083015250602082015167ffffffffffffffff811115610e6b57610e6a610c4e565b5b610e7784828501610cfc565b602083015250604082015167ffffffffffffffff811115610e9b57610e9a610c4e565b5b610ea784828501610cfc565b6040830152506060610ebb84828501610d3a565b606083015250608082015167ffffffffffffffff811115610edf57610ede610c4e565b5b610eeb84828501610de9565b60808301525092915050565b600060208284031215610f0d57610f0c610ae9565b5b600082015167ffffffffffffffff811115610f2b57610f2a610aee565b5b610f3784828501610e17565b91505092915050565b600081905092915050565b50565b6000610f5b600083610f40565b9150610f6682610f4b565b600082019050919050565b6000610f7c82610f4e565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fc08261082c565b9150610fcb8361082c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561100457611003610f86565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110498261082c565b91506110548361082c565b9250826110645761106361100f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61108e8161106f565b811461109957600080fd5b50565b6000815190506110ab81611085565b92915050565b6000819050919050565b6110c4816110b1565b81146110cf57600080fd5b50565b6000815190506110e1816110bb565b92915050565b6000815190506110f681610af3565b92915050565b600080600080600060a0868803121561111857611117610ae9565b5b60006111268882890161109c565b9550506020611137888289016110d2565b9450506040611148888289016110e7565b9350506060611159888289016110e7565b925050608061116a8882890161109c565b915050929550929590935056fea264697066735822122069b36c00b2eed8d189299c41b7a33060560f5a6eca553bcff2e25206ccd7fd0764736f6c63430008100033a2646970667358221220ae78322a0477f6dd0f987981a127b1db7defa29a609e1be63a352cea41d3917f64736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 91,
        "contract": "contracts/Administration.sol:Administration",
        "label": "registeredVehicles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(vehicleStruct)80_storage)"
      },
      {
        "astId": 94,
        "contract": "contracts/Administration.sol:Administration",
        "label": "registeredVehiclesAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 98,
        "contract": "contracts/Administration.sol:Administration",
        "label": "vehicleExists",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 101,
        "contract": "contracts/Administration.sol:Administration",
        "label": "numberOfVehicle",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 108,
        "contract": "contracts/Administration.sol:Administration",
        "label": "hgsBoxOfficesAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 113,
        "contract": "contracts/Administration.sol:Administration",
        "label": "hgsBoxOffices",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_contract(HGSBoxOffice)1653)"
      },
      {
        "astId": 117,
        "contract": "contracts/Administration.sol:Administration",
        "label": "hgsBoxOfficesExists",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 120,
        "contract": "contracts/Administration.sol:Administration",
        "label": "numberOfOffices",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 126,
        "contract": "contracts/Administration.sol:Administration",
        "label": "dailyPass",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(VehicleCrossingTime)86_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(VehicleCrossingTime)86_storage)dyn_storage": {
        "base": "t_struct(VehicleCrossingTime)86_storage",
        "encoding": "dynamic_array",
        "label": "struct Administration.VehicleCrossingTime[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint64)dyn_storage": {
        "base": "t_uint64",
        "encoding": "dynamic_array",
        "label": "uint64[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(HGSBoxOffice)1653": {
        "encoding": "inplace",
        "label": "contract HGSBoxOffice",
        "numberOfBytes": "20"
      },
      "t_enum(vehicleType)67": {
        "encoding": "inplace",
        "label": "enum Administration.vehicleType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_contract(HGSBoxOffice)1653)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract HGSBoxOffice)",
        "numberOfBytes": "32",
        "value": "t_contract(HGSBoxOffice)1653"
      },
      "t_mapping(t_address,t_struct(vehicleStruct)80_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Administration.vehicleStruct)",
        "numberOfBytes": "32",
        "value": "t_struct(vehicleStruct)80_storage"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(VehicleCrossingTime)86_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Administration.VehicleCrossingTime[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(VehicleCrossingTime)86_storage)dyn_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(VehicleCrossingTime)86_storage": {
        "encoding": "inplace",
        "label": "struct Administration.VehicleCrossingTime",
        "members": [
          {
            "astId": 83,
            "contract": "contracts/Administration.sol:Administration",
            "label": "date",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(_DateTime)636_storage"
          },
          {
            "astId": 85,
            "contract": "contracts/Administration.sol:Administration",
            "label": "vehicle",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(_DateTime)636_storage": {
        "encoding": "inplace",
        "label": "struct DateConverter._DateTime",
        "members": [
          {
            "astId": 623,
            "contract": "contracts/Administration.sol:Administration",
            "label": "year",
            "offset": 0,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 625,
            "contract": "contracts/Administration.sol:Administration",
            "label": "month",
            "offset": 2,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 627,
            "contract": "contracts/Administration.sol:Administration",
            "label": "day",
            "offset": 3,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 629,
            "contract": "contracts/Administration.sol:Administration",
            "label": "hour",
            "offset": 4,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 631,
            "contract": "contracts/Administration.sol:Administration",
            "label": "minute",
            "offset": 5,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 633,
            "contract": "contracts/Administration.sol:Administration",
            "label": "second",
            "offset": 6,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 635,
            "contract": "contracts/Administration.sol:Administration",
            "label": "weekday",
            "offset": 7,
            "slot": "0",
            "type": "t_uint8"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(vehicleStruct)80_storage": {
        "encoding": "inplace",
        "label": "struct Administration.vehicleStruct",
        "members": [
          {
            "astId": 69,
            "contract": "contracts/Administration.sol:Administration",
            "label": "HGSNumber",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 71,
            "contract": "contracts/Administration.sol:Administration",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 73,
            "contract": "contracts/Administration.sol:Administration",
            "label": "surname",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 76,
            "contract": "contracts/Administration.sol:Administration",
            "label": "vehicleClass",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(vehicleType)67"
          },
          {
            "astId": 79,
            "contract": "contracts/Administration.sol:Administration",
            "label": "crossingHistories",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint64)dyn_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}